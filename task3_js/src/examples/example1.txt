(define length (
    lambda (x) (
        if (null? x) 0
        (+ 1 (length (cdr x)))
    )
))

 
(length (quote(1 2 3)))


(define member ( lambda (lst guess_member)
  (if (null? lst) #f (or (= guess_member (car lst)) (member (cdr lst) guess_member)))
  ))


(member (quote(1 2 3)) 4)
(member (quote(1 2 3)) 1)


(define append (lambda (lst1 lst2)
  (if (null? lst1) lst2 (cons(car lst1) (append (cdr lst1) lst2) ) )
  ))

(append (quote(1 2 3)) (quote(4 5 6)))
