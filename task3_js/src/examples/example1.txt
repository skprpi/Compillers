
(define append (lambda (lst1 lst2)
  (if (null? lst1) lst2 (cons(car lst1) (append (cdr lst1) lst2) ) )
  ))



(define filter (lambda (fun lst)
  ( if (null? lst) (quote()) (  if (fun (car lst)) (cons (car lst) (filter fun (cdr lst)) )  (filter fun (cdr lst))) )
  ))


(define qsort (lambda (lst)
  ( if (null? lst) (quote()) (  if (null? (cdr lst)) (cons (car lst) (quote())) ( append (append (qsort (filter (lambda(x)( <= x (car lst))) (cdr lst))  )  (cons (car lst) (quote()) ) )   (qsort (filter (lambda(x)( > x (car lst))) (cdr lst))) )))
  ))


(qsort (quote(1 2 3)))

