:uncons
    [dup first swap rest]
def


:sum
    [dup null
        [drop 0]
        [uncons sum +]
        if
    ]
def


:mul
    [dup null
        [drop 0]
        [uncons dup null
            [drop 1 *]
            [mul *]
            if
        ]
        if
    ]
def


:butlast
    [dup null
        [drop]
        [uncons dup null
            [drop drop []]
            [butlast cons]
            if
        ]
        if
    ]
def


:sorted_helper
    [dup null
        [drop true]
        [uncons dup null
            [drop drop]
            [dup first swap [<] dip dup null
                [drop drop]
                [sorted_helper and]
                if
            ]
            if
        ]
        if
    ]
def

:sorted
    [dup null
        [drop true]
        [true swap sorted_helper]
        if
    ]
def


:member
    [dup null
        [drop false]
        [dup first [swap] dip swap dup [swap] dip  =
            [drop drop true]
            [swap rest member]
            if
        ]
        if
    ]
def

:append_helper
    [dup null
        [drop]
        [uncons [swap] dip append_helper cons]
        if
    ]
def

:append
    [swap append_helper]
def


:reverse_helper
    [ dup null
        [drop]
        [uncons [swap cons] dip reverse_helper]
        if
    ]
def


:reverse
    [[] swap reverse_helper]
def



:map
    [swap dup null
        [swap drop]
        [uncons [[dup]dip swap i swap] dip swap map cons]
        if
    ]
def


:filter
    [swap dup null
        [swap drop]
        [uncons [[dup]dip dup [swap i]dip swap] dip swap
            [[swap] dip swap filter cons]
            [[drop] dip swap filter]
            if
        ]
        if
    ]
def


[-5 7 1 8 -4] [0 >] filter
