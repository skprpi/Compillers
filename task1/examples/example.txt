:uncons
    [dup first swap rest]
def


:sum
    [dup null
        [drop 0]
        [uncons sum +]
        if
    ]
def


:mul
    [dup null
        [drop 0]
        [uncons dup null
            [drop 1 *]
            [mul *]
            if
        ]
        if
    ]
def


:butlast
    [dup null
        [drop]
        [uncons dup null
            [drop drop []]
            [butlast cons]
            if
        ]
        if
    ]
def


:sorted_helper
    [dup null
        [drop true]
        [uncons dup null
            [drop drop]
            [dup first swap [<] dip dup null
                [drop drop]
                [sorted_helper and]
                if
            ]
            if
        ]
        if
    ]
def

:sorted
    [dup null
        [drop true]
        [true swap sorted_helper]
        if
    ]
def


:member
    [dup null
        [drop false]
        [dup first [swap] dip swap dup [swap] dip  =
            [drop drop true]
            [swap rest member]
            if
        ]
        if
    ]
def


[1 2 3] sum
[2 3 4] mul
[1 2 3] butlast
[1 2 3 4 5] sorted
[1 2 3 3 5] sorted
3 [2 1 3 4] member
5 [2 1 3 4] member
